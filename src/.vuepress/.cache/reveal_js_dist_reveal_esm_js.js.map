{
  "version": 3,
  "sources": ["dep:reveal_js_dist_reveal_esm_js", "../../../node_modules/reveal.js/js/utils/util.js", "../../../node_modules/reveal.js/js/utils/device.js", "../../../node_modules/reveal.js/node_modules/fitty/dist/fitty.module.js", "../../../node_modules/reveal.js/js/controllers/slidecontent.js", "../../../node_modules/reveal.js/js/controllers/slidenumber.js", "../../../node_modules/reveal.js/js/utils/color.js", "../../../node_modules/reveal.js/js/controllers/backgrounds.js", "../../../node_modules/reveal.js/js/utils/constants.js", "../../../node_modules/reveal.js/js/controllers/autoanimate.js", "../../../node_modules/reveal.js/js/controllers/fragments.js", "../../../node_modules/reveal.js/js/controllers/overview.js", "../../../node_modules/reveal.js/js/controllers/keyboard.js", "../../../node_modules/reveal.js/js/controllers/location.js", "../../../node_modules/reveal.js/js/controllers/controls.js", "../../../node_modules/reveal.js/js/controllers/progress.js", "../../../node_modules/reveal.js/js/controllers/pointer.js", "../../../node_modules/reveal.js/js/utils/loader.js", "../../../node_modules/reveal.js/js/controllers/plugins.js", "../../../node_modules/reveal.js/js/controllers/print.js", "../../../node_modules/reveal.js/js/controllers/touch.js", "../../../node_modules/reveal.js/js/controllers/focus.js", "../../../node_modules/reveal.js/js/controllers/notes.js", "../../../node_modules/reveal.js/js/components/playback.js", "../../../node_modules/reveal.js/js/config.js", "../../../node_modules/reveal.js/js/reveal.js", "../../../node_modules/reveal.js/js/index.js"],
  "sourcesContent": ["import d from \"../../../../node_modules/reveal.js/dist/reveal.esm.js\";export default d;", "/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}", "const UA = navigator.userAgent;\nconst testElement = document.createElement( 'div' );\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );\n\n// Flags if we should use zoom instead of transform to scale\n// up slides. Zoom produces crisper results but has a lot of\n// xbrowser quirks so we only use it in whitelisted browsers.\nexport const supportsZoom = 'zoom' in testElement.style && !isMobile &&\n\t\t\t\t( isChrome || /Version\\/[\\d\\.]+.*Safari/.test( UA ) );", "/*\n * fitty v2.3.3 - Snugly resizes text to fit its parent container\n * Copyright (c) 2020 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (w) {\n\n  // no window, early exit\n  if (!w) return;\n\n  // node list to array helper method\n  var toArray = function toArray(nl) {\n    return [].slice.call(nl);\n  };\n\n  // states\n  var DrawState = {\n    IDLE: 0,\n    DIRTY_CONTENT: 1,\n    DIRTY_LAYOUT: 2,\n    DIRTY: 3\n  };\n\n  // all active fitty elements\n  var fitties = [];\n\n  // group all redraw calls till next frame, we cancel each frame request when a new one comes in. If no support for request animation frame, this is an empty function and supports for fitty stops.\n  var redrawFrame = null;\n  var requestRedraw = 'requestAnimationFrame' in w ? function () {\n    w.cancelAnimationFrame(redrawFrame);\n    redrawFrame = w.requestAnimationFrame(function () {\n      return redraw(fitties.filter(function (f) {\n        return f.dirty && f.active;\n      }));\n    });\n  } : function () {};\n\n  // sets all fitties to dirty so they are redrawn on the next redraw loop, then calls redraw\n  var redrawAll = function redrawAll(type) {\n    return function () {\n      fitties.forEach(function (f) {\n        return f.dirty = type;\n      });\n      requestRedraw();\n    };\n  };\n\n  // redraws fitties so they nicely fit their parent container\n  var redraw = function redraw(fitties) {\n\n    // getting info from the DOM at this point should not trigger a reflow, let's gather as much intel as possible before triggering a reflow\n\n    // check if styles of all fitties have been computed\n    fitties.filter(function (f) {\n      return !f.styleComputed;\n    }).forEach(function (f) {\n      f.styleComputed = computeStyle(f);\n    });\n\n    // restyle elements that require pre-styling, this triggers a reflow, please try to prevent by adding CSS rules (see docs)\n    fitties.filter(shouldPreStyle).forEach(applyStyle);\n\n    // we now determine which fitties should be redrawn\n    var fittiesToRedraw = fitties.filter(shouldRedraw);\n\n    // we calculate final styles for these fitties\n    fittiesToRedraw.forEach(calculateStyles);\n\n    // now we apply the calculated styles from our previous loop\n    fittiesToRedraw.forEach(function (f) {\n      applyStyle(f);\n      markAsClean(f);\n    });\n\n    // now we dispatch events for all restyled fitties\n    fittiesToRedraw.forEach(dispatchFitEvent);\n  };\n\n  var markAsClean = function markAsClean(f) {\n    return f.dirty = DrawState.IDLE;\n  };\n\n  var calculateStyles = function calculateStyles(f) {\n\n    // get available width from parent node\n    f.availableWidth = f.element.parentNode.clientWidth;\n\n    // the space our target element uses\n    f.currentWidth = f.element.scrollWidth;\n\n    // remember current font size\n    f.previousFontSize = f.currentFontSize;\n\n    // let's calculate the new font size\n    f.currentFontSize = Math.min(Math.max(f.minSize, f.availableWidth / f.currentWidth * f.previousFontSize), f.maxSize);\n\n    // if allows wrapping, only wrap when at minimum font size (otherwise would break container)\n    f.whiteSpace = f.multiLine && f.currentFontSize === f.minSize ? 'normal' : 'nowrap';\n  };\n\n  // should always redraw if is not dirty layout, if is dirty layout, only redraw if size has changed\n  var shouldRedraw = function shouldRedraw(f) {\n    return f.dirty !== DrawState.DIRTY_LAYOUT || f.dirty === DrawState.DIRTY_LAYOUT && f.element.parentNode.clientWidth !== f.availableWidth;\n  };\n\n  // every fitty element is tested for invalid styles\n  var computeStyle = function computeStyle(f) {\n\n    // get style properties\n    var style = w.getComputedStyle(f.element, null);\n\n    // get current font size in pixels (if we already calculated it, use the calculated version)\n    f.currentFontSize = parseFloat(style.getPropertyValue('font-size'));\n\n    // get display type and wrap mode\n    f.display = style.getPropertyValue('display');\n    f.whiteSpace = style.getPropertyValue('white-space');\n  };\n\n  // determines if this fitty requires initial styling, can be prevented by applying correct styles through CSS\n  var shouldPreStyle = function shouldPreStyle(f) {\n\n    var preStyle = false;\n\n    // if we already tested for prestyling we don't have to do it again\n    if (f.preStyleTestCompleted) return false;\n\n    // should have an inline style, if not, apply\n    if (!/inline-/.test(f.display)) {\n      preStyle = true;\n      f.display = 'inline-block';\n    }\n\n    // to correctly calculate dimensions the element should have whiteSpace set to nowrap\n    if (f.whiteSpace !== 'nowrap') {\n      preStyle = true;\n      f.whiteSpace = 'nowrap';\n    }\n\n    // we don't have to do this twice\n    f.preStyleTestCompleted = true;\n\n    return preStyle;\n  };\n\n  // apply styles to single fitty\n  var applyStyle = function applyStyle(f) {\n    f.element.style.whiteSpace = f.whiteSpace;\n    f.element.style.display = f.display;\n    f.element.style.fontSize = f.currentFontSize + 'px';\n  };\n\n  // dispatch a fit event on a fitty\n  var dispatchFitEvent = function dispatchFitEvent(f) {\n    f.element.dispatchEvent(new CustomEvent('fit', {\n      detail: {\n        oldValue: f.previousFontSize,\n        newValue: f.currentFontSize,\n        scaleFactor: f.currentFontSize / f.previousFontSize\n      }\n    }));\n  };\n\n  // fit method, marks the fitty as dirty and requests a redraw (this will also redraw any other fitty marked as dirty)\n  var fit = function fit(f, type) {\n    return function () {\n      f.dirty = type;\n      if (!f.active) return;\n      requestRedraw();\n    };\n  };\n\n  var init = function init(f) {\n\n    // save some of the original CSS properties before we change them\n    f.originalStyle = {\n      whiteSpace: f.element.style.whiteSpace,\n      display: f.element.style.display,\n      fontSize: f.element.style.fontSize\n    };\n\n    // should we observe DOM mutations\n    observeMutations(f);\n\n    // this is a new fitty so we need to validate if it's styles are in order\n    f.newbie = true;\n\n    // because it's a new fitty it should also be dirty, we want it to redraw on the first loop\n    f.dirty = true;\n\n    // we want to be able to update this fitty\n    fitties.push(f);\n  };\n\n  var destroy = function destroy(f) {\n    return function () {\n\n      // remove from fitties array\n      fitties = fitties.filter(function (_) {\n        return _.element !== f.element;\n      });\n\n      // stop observing DOM\n      if (f.observeMutations) f.observer.disconnect();\n\n      // reset the CSS properties we changes\n      f.element.style.whiteSpace = f.originalStyle.whiteSpace;\n      f.element.style.display = f.originalStyle.display;\n      f.element.style.fontSize = f.originalStyle.fontSize;\n    };\n  };\n\n  // add a new fitty, does not redraw said fitty\n  var subscribe = function subscribe(f) {\n    return function () {\n      if (f.active) return;\n      f.active = true;\n      requestRedraw();\n    };\n  };\n\n  // remove an existing fitty\n  var unsubscribe = function unsubscribe(f) {\n    return function () {\n      return f.active = false;\n    };\n  };\n\n  var observeMutations = function observeMutations(f) {\n\n    // no observing?\n    if (!f.observeMutations) return;\n\n    // start observing mutations\n    f.observer = new MutationObserver(fit(f, DrawState.DIRTY_CONTENT));\n\n    // start observing\n    f.observer.observe(f.element, f.observeMutations);\n  };\n\n  // default mutation observer settings\n  var mutationObserverDefaultSetting = {\n    subtree: true,\n    childList: true,\n    characterData: true\n  };\n\n  // default fitty options\n  var defaultOptions = {\n    minSize: 16,\n    maxSize: 512,\n    multiLine: true,\n    observeMutations: 'MutationObserver' in w ? mutationObserverDefaultSetting : false\n  };\n\n  // array of elements in, fitty instances out\n  function fittyCreate(elements, options) {\n\n    // set options object\n    var fittyOptions = _extends({}, defaultOptions, options);\n\n    // create fitties\n    var publicFitties = elements.map(function (element) {\n\n      // create fitty instance\n      var f = _extends({}, fittyOptions, {\n\n        // internal options for this fitty\n        element: element,\n        active: true\n      });\n\n      // initialise this fitty\n      init(f);\n\n      // expose API\n      return {\n        element: element,\n        fit: fit(f, DrawState.DIRTY),\n        unfreeze: subscribe(f),\n        freeze: unsubscribe(f),\n        unsubscribe: destroy(f)\n      };\n    });\n\n    // call redraw on newly initiated fitties\n    requestRedraw();\n\n    // expose fitties\n    return publicFitties;\n  }\n\n  // fitty creation function\n  function fitty(target) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    // if target is a string\n    return typeof target === 'string' ?\n\n    // treat it as a querySelector\n    fittyCreate(toArray(document.querySelectorAll(target)), options) :\n\n    // create single fitty\n    fittyCreate([target], options)[0];\n  }\n\n  // handles viewport changes, redraws all fitties, but only does so after a timeout\n  var resizeDebounce = null;\n  var onWindowResized = function onWindowResized() {\n    w.clearTimeout(resizeDebounce);\n    resizeDebounce = w.setTimeout(redrawAll(DrawState.DIRTY_LAYOUT), fitty.observeWindowDelay);\n  };\n\n  // define observe window property, so when we set it to true or false events are automatically added and removed\n  var events = ['resize', 'orientationchange'];\n  Object.defineProperty(fitty, 'observeWindow', {\n    set: function set(enabled) {\n      var method = (enabled ? 'add' : 'remove') + 'EventListener';\n      events.forEach(function (e) {\n        w[method](e, onWindowResized);\n      });\n    }\n  });\n\n  // fitty global properties (by setting observeWindow to true the events above get added)\n  fitty.observeWindow = true;\n  fitty.observeWindowDelay = 100;\n\n  // public fit all method, will force redraw no matter what\n  fitty.fitAll = redrawAll(DrawState.DIRTY);\n\n  // export our fitty function, we don't want to keep it to our selves\n  return fitty;\n}(typeof window === 'undefined' ? null : window);", "import { extend, queryAll, closest, getMimeTypeFromFile } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\treturn `url(${encodeURI(background.trim())})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the given slide,\n\t * if there are any.\n\t */\n\tlayout( slide ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( slide.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n", "/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.substr( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.substr( 2, 2 ), 16 ),\n\t\t\tb: parseInt( hex6.substr( 4, 2 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}", "import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = data.backgroundColor;\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n", "\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;", "import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck \u00AF\\_(\u30C4)_/\u00AF\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Eplicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considerd\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n", "import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}", "import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}", "import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif ( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}", "/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet element;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( element ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( element ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not avaialble.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.history.replaceState( null, null, '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? \u00AF\\_(\u30C4)_/\u00AF\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}", "import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}", "/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}", "/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}", "import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registed plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all regisered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n", "import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync setupPDF() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst doingSlideNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = document.querySelector( '.reveal-viewport' );\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\t// Re-run the slide layout so that r-fit-text is applied based on\n\t\t\t\t// the printed slide size\n\t\t\t\tthis.Reveal.slideContent.layout( slide )\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject slide numbers if `slideNumbers` are enabled\n\t\t\t\tif( doingSlideNumbers ) {\n\t\t\t\t\tconst slideNumber = index + 1;\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tisPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n}\n", "import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}", "import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}", "/**\n * Handles the showing and \n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\n\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. As an <aside class=\"notes\"> inside of the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using an <aside class=\"notes\"> element\n\t\tlet notesElement = slide.querySelector( 'aside.notes' );\n\t\tif( notesElement ) {\n\t\t\treturn notesElement.innerHTML;\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}", "/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}", "import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Print from './controllers/print.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '4.3.0';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tprint = new Print( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( print.isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tprint.setupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', () => {\n\t\t\t\t\tprint.setupPDF();\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tslide.parentNode.removeChild( slide );\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions \u2013 such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide \u2013 can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\t\tif( scale === 1 ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Zoom Scaling\n\t\t\t\t\t// Content remains crisp no matter how much we scale. Side\n\t\t\t\t\t// effects are minor differences in text layout and iframe\n\t\t\t\t\t// viewports changing size. A 200x200 iframe viewport in a\n\t\t\t\t\t// 2x zoomed presentation ends up having a 400x400 viewport.\n\t\t\t\t\tif( scale > 1 && Device.supportsZoom && window.devicePixelRatio < 2 ) {\n\t\t\t\t\t\tdom.slides.style.zoom = scale;\n\t\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t\t}\n\t\t\t\t\t// Transform Scaling\n\t\t\t\t\t// Content layout remains the exact same when scaled up.\n\t\t\t\t\t// Side effect is content becoming blurred, especially with\n\t\t\t\t\t// high scale values on ldpi screens.\n\t\t\t\t\telse {\n\t\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: config.width,\n\t\t\theight: config.height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before hte slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t\tautoAnimateTransition = true;\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\n\t\t\t}\n\n\t\t\ttransition = 'running';\n\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidechanged',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tpreviousSlide,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t\torigin\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tfragments.sortAll();\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = print.isPrintingPDF();\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment' ).forEach( fragment => {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\tUtil.queryAll( element, '.fragment.visible' ).forEach( fragment => {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( print.isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// availalbe if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\n\n\t\t\t// When the slide first appears there is no \"current\" fragment so\n\t\t\t// we look for a data-autoslide timing on the first fragment\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tprint,\n\t\tfocus,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n", "import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],
  "mappings": "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",
  "names": []
}
