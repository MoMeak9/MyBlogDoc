import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as e,a as s,b as n,d as c,e as o,r as i}from"./app.d7b34baa.js";const l={},u=o(`<h1 id="css-父元素没有被子元素撑开" tabindex="-1"><a class="header-anchor" href="#css-父元素没有被子元素撑开" aria-hidden="true">#</a> CSS 父元素没有被子元素撑开</h1><blockquote><p>这个应该是昨天问题的复现和最优解</p></blockquote><h3 id="问题复现" tabindex="-1"><a class="header-anchor" href="#问题复现" aria-hidden="true">#</a> 问题复现</h3><p>在给未设置长度的容器变换背景的时候，加入一个超长内容，原父级容器没有被新的子元素撑开</p><p><img src="https://cdn.yihuiblog.top/images/202208181438034.png" alt="image-20220818143802901"></p><p>而是自动获取为父级元素的100%</p><p><img src="https://cdn.yihuiblog.top/images/202208181438310.png" alt="image-20220818143831231"></p><p><strong>源码</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.main</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> grey<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 50vw<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
    <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.list</span> <span class="token punctuation">{</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.long</span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 99999px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.active</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> preClickElement <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token keyword">const</span> handleClick <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> target <span class="token operator">=</span> e<span class="token punctuation">.</span>currentTarget
        target<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&#39;active&#39;</span><span class="token punctuation">;</span>
        preClickElement <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>preClickElement<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
        preClickElement <span class="token operator">=</span> target<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token string">&quot;main&quot;</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token punctuation">{</span>
                    data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
                            <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span>
                            <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>item<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token string">&#39;long&#39;</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                    longlongdiv
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="原因" tabindex="-1"><a class="header-anchor" href="#原因" aria-hidden="true">#</a> 原因</h2><p>块级元素被子元素撑开时，如果没设置宽度，宽度就是这个块级元素的父元素的100%，所以<code>.list</code>的宽度是<code>.mian</code>的100%。</p><p>块级元素的宽度（未设置的情况下with: auto）等于其父元素内容区的宽度，所以跟儿子撑不撑开没关系。浮动元素和行内块级元素这种失去了天生宽度的元素，才有被儿子撑开一说，所以解决起来也很简单，将<code>.list</code>加上</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>即可</p><img src="https://cdn.yihuiblog.top/images/202208181443387.png" alt="image-20220818144322293" style="zoom:50%;">`,16),r={href:"https://www.zhangxinxu.com/wordpress/2018/07/css-width-auto/",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const a=i("ExternalLinkIcon");return p(),e("div",null,[u,s("p",null,[n("然后关于"),s("a",r,[n("with:auto"),c(a)]),n("这篇文章非常不错")])])}const b=t(l,[["render",k],["__file","CSS 父元素没有被子元素撑开问题.html.vue"]]);export{b as default};
