import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e as t}from"./app.d7b34baa.js";const p={},o=t(`<h1 id="函数泛型" tabindex="-1"><a class="header-anchor" href="#函数泛型" aria-hidden="true">#</a> 函数泛型</h1><h2 id="箭头函数泛型" tabindex="-1"><a class="header-anchor" href="#箭头函数泛型" aria-hidden="true">#</a> 箭头函数泛型</h2><p>直接以内嵌式书写的箭头函数泛型，以复用函数</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">;</span>

<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">;</span>

<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span></span><span class="token operator">&gt;</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">;</span>

<span class="token keyword">const</span> foo<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function-variable function">T</span> <span class="token operator">=</span> x <span class="token operator">=&gt;</span> x<span class="token punctuation">;</span>

<span class="token keyword">const</span> identity <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> renderAuthorize <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>Authorized<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>currentAuthority<span class="token operator">:</span> CurrentAuthorityType<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    currentAuthority<span class="token operator">:</span> CurrentAuthorityType<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="普通函数泛型" tabindex="-1"><a class="header-anchor" href="#普通函数泛型" aria-hidden="true">#</a> 普通函数泛型</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * 获取数组中最小值 (T泛型通用)
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>T[]<span class="token punctuation">}</span> arr
 * <span class="token keyword">@returns</span> <span class="token punctuation">{</span>T<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getMin</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">{</span>
   <span class="token keyword">var</span> min<span class="token operator">=</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
   arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token operator">&lt;</span>min<span class="token punctuation">)</span><span class="token punctuation">{</span>
          min<span class="token operator">=</span>value<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> min<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getMin</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getMin</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;tom&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;jerry&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;jack&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;sunny&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="类中的函数泛型-泛型类" tabindex="-1"><a class="header-anchor" href="#类中的函数泛型-泛型类" aria-hidden="true">#</a> 类中的函数泛型（泛型类）</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">GetMin<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span><span class="token punctuation">{</span>
     arr<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
     <span class="token function">add</span><span class="token punctuation">(</span>ele<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
    <span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">{</span>
       <span class="token keyword">var</span> min<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token operator">&lt;</span>min<span class="token punctuation">)</span><span class="token punctuation">{</span>
              min<span class="token operator">=</span>value<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
       <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">return</span> min<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> gm1<span class="token operator">=</span> <span class="token keyword">new</span>  <span class="token class-name">GetMin<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
gm1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
gm1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
gm1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
gm1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gm1<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token keyword">var</span> gm2<span class="token operator">=</span> <span class="token keyword">new</span>  <span class="token class-name">GetMin<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
gm2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;tom&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
gm2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;jerry&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
gm2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
gm2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;sunny&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gm2<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="泛型函数接口" tabindex="-1"><a class="header-anchor" href="#泛型函数接口" aria-hidden="true">#</a> 泛型函数接口</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">ConfigFn</span><span class="token punctuation">{</span>
    <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>value<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">const</span> getData<span class="token operator">:</span><span class="token function-variable function">Confign</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>value<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token generic-function"><span class="token function">getData</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// getData&lt;string&gt;(1243);  //错误</span>
 
 
<span class="token comment">// 类似  Map&lt;String,Object&gt; Param  接口</span>
<span class="token keyword">interface</span> <span class="token class-name">Param</span><span class="token punctuation">{</span>
    <span class="token punctuation">[</span>index<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token builtin">any</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="泛型类接口" tabindex="-1"><a class="header-anchor" href="#泛型类接口" aria-hidden="true">#</a> 泛型类接口</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * page分页对象
 */</span>
<span class="token keyword">class</span> <span class="token class-name">Page</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> currentPage<span class="token operator">:</span><span class="token builtin">number</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//当前页码 默认1</span>
    <span class="token keyword">private</span> pageSize<span class="token operator">:</span><span class="token builtin">number</span><span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token comment">//每页条数 默认为10</span>
    <span class="token keyword">private</span> sortName<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token comment">//排序字段</span>
    <span class="token keyword">private</span> sortOrder<span class="token operator">:</span><span class="token builtin">string</span><span class="token operator">=</span><span class="token string">&quot;asc&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 排序规则 asc | desc 默认为asc正序</span>
 
 
     <span class="token function">constructor</span><span class="token punctuation">(</span>param<span class="token operator">:</span>Param<span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span>param<span class="token punctuation">[</span><span class="token string">&quot;currentPage&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
             <span class="token keyword">this</span><span class="token punctuation">.</span>currentPage<span class="token operator">=</span>param<span class="token punctuation">[</span><span class="token string">&quot;currentPage&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span>param<span class="token punctuation">[</span><span class="token string">&quot;pageSize&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
             <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token operator">=</span>param<span class="token punctuation">[</span><span class="token string">&quot;pageSize&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span>param<span class="token punctuation">[</span><span class="token string">&quot;sortName&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
             <span class="token keyword">this</span><span class="token punctuation">.</span>sortName<span class="token operator">=</span>param<span class="token punctuation">[</span><span class="token string">&quot;sortName&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span>param<span class="token punctuation">[</span><span class="token string">&quot;sortOrder&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
             <span class="token keyword">this</span><span class="token punctuation">.</span>sortOrder<span class="token operator">=</span>param<span class="token punctuation">[</span><span class="token string">&quot;sortOrder&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span>    <span class="token function">getStartNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span>   <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentPage<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 
 
<span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">{</span>
     id<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">;</span><span class="token comment">//id主键自增</span>
     name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">;</span><span class="token comment">//姓名</span>
     sex<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">;</span><span class="token comment">//性别 1男 2女</span>
     age<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">;</span><span class="token comment">//年龄</span>
     city<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">;</span><span class="token comment">//城市</span>
     describe<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">;</span><span class="token comment">//描述</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="泛型接口" tabindex="-1"><a class="header-anchor" href="#泛型接口" aria-hidden="true">#</a> 泛型接口</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span>  <span class="token class-name">BaseDao<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
     <span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">;</span><span class="token comment">//根据主键id查询一个实体</span>
     <span class="token function">findPageList</span><span class="token punctuation">(</span>param<span class="token operator">:</span>Param<span class="token punctuation">,</span>page<span class="token operator">:</span>Page<span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//查询分页列表</span>
     <span class="token function">findPageCount</span><span class="token punctuation">(</span>param<span class="token operator">:</span>Param<span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">;</span><span class="token comment">//查询分页count</span>
     <span class="token function">save</span><span class="token punctuation">(</span>o<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span><span class="token punctuation">;</span><span class="token comment">//保存一个实体</span>
     <span class="token function">update</span><span class="token punctuation">(</span>o<span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span><span class="token punctuation">;</span><span class="token comment">//更新一个实体</span>
     <span class="token function">deleteById</span><span class="token punctuation">(</span>id<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除一个实体</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="接口实现类" tabindex="-1"><a class="header-anchor" href="#接口实现类" aria-hidden="true">#</a> 接口实现类</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">UserDao<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">BaseDao<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span></span><span class="token punctuation">{</span>
     <span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span>User<span class="token punctuation">{</span>
 
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
    <span class="token function">findPageList</span><span class="token punctuation">(</span>param<span class="token operator">:</span>Param<span class="token punctuation">,</span>page<span class="token operator">:</span>Page<span class="token punctuation">)</span><span class="token operator">:</span>User<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
         <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">findPageCount</span><span class="token punctuation">(</span>param<span class="token operator">:</span>Param<span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">{</span>
         <span class="token keyword">return</span>   <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">save</span><span class="token punctuation">(</span>o<span class="token operator">:</span>User<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span><span class="token punctuation">{</span>
 
    <span class="token punctuation">}</span>
    <span class="token function">update</span><span class="token punctuation">(</span>o<span class="token operator">:</span>User<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span><span class="token punctuation">{</span>
 
    <span class="token punctuation">}</span>
    <span class="token function">deleteById</span><span class="token punctuation">(</span>id<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),e=[o];function c(l,i){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","函数泛型.html.vue"]]);export{k as default};
