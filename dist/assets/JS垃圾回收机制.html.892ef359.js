const e=JSON.parse(`{"key":"v-14ef3288","path":"/JavaScript/JS%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6.html","title":"JS垃圾回收机制","lang":"zh-CN","frontmatter":{"date":"2022-07-15T00:00:00.000Z","category":["前端","JavaScript"],"description":"GC是什么 GC 即 Garbage Collection ，程序工作过程中会产生很多 垃圾，这些垃圾是程序不用的内存或者是之前用过了，以后不会再用的内存空间，而 GC 就是负责回收垃圾的，因为他工作在引擎内部，所以对于我们前端来说，GC 过程是相对比较无感的，这一套引擎执行而对我们又相对无感的操作也就是常说的 垃圾回收机制 了 当然也不是所有语言都有...","head":[["meta",{"property":"og:url","content":"https://yihuiBlog.top/JavaScript/JS%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"Yihui's Blog"}],["meta",{"property":"og:title","content":"JS垃圾回收机制"}],["meta",{"property":"og:description","content":"GC是什么 GC 即 Garbage Collection ，程序工作过程中会产生很多 垃圾，这些垃圾是程序不用的内存或者是之前用过了，以后不会再用的内存空间，而 GC 就是负责回收垃圾的，因为他工作在引擎内部，所以对于我们前端来说，GC 过程是相对比较无感的，这一套引擎执行而对我们又相对无感的操作也就是常说的 垃圾回收机制 了 当然也不是所有语言都有..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-11-25T07:13:50.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-07-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-25T07:13:50.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"GC是什么","slug":"gc是什么","link":"#gc是什么","children":[]},{"level":2,"title":"垃圾产生&为何回收","slug":"垃圾产生-为何回收","link":"#垃圾产生-为何回收","children":[]},{"level":2,"title":"垃圾回收策略⭐","slug":"垃圾回收策略","link":"#垃圾回收策略","children":[{"level":3,"title":"标记清除算法","slug":"标记清除算法","link":"#标记清除算法","children":[]},{"level":3,"title":"引用计数算法","slug":"引用计数算法","link":"#引用计数算法","children":[]}]},{"level":2,"title":"V8对GC的优化","slug":"v8对gc的优化","link":"#v8对gc的优化","children":[{"level":3,"title":"分代式垃圾回收","slug":"分代式垃圾回收","link":"#分代式垃圾回收","children":[]},{"level":3,"title":"并行回收(Parallel)","slug":"并行回收-parallel","link":"#并行回收-parallel","children":[]},{"level":3,"title":"增量标记与懒性清理","slug":"增量标记与懒性清理","link":"#增量标记与懒性清理","children":[]},{"level":3,"title":"并发回收(Concurrent)","slug":"并发回收-concurrent","link":"#并发回收-concurrent","children":[]},{"level":3,"title":"再说V8中GC优化","slug":"再说v8中gc优化","link":"#再说v8中gc优化","children":[]}]},{"level":2,"title":"最后","slug":"最后","link":"#最后","children":[]}],"git":{"createdTime":1669360430000,"updatedTime":1669360430000,"contributors":[{"name":"MoMeak9","email":"shi.yihui@iwhalecloud.com","commits":1}]},"readingTime":{"minutes":27.99,"words":8398},"copyright":"著作权归YihuiBlog所有\\n基于CC-BY 4.0协议\\n原文链接：https://yihuiblog.top/JavaScript/JS%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6.html","filePathRelative":"JavaScript/JS垃圾回收机制.md","localizedDate":"2022年7月15日"}`);export{e as data};
