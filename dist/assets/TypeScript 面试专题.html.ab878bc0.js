const e=JSON.parse(`{"key":"v-767cb336","path":"/TypeScript/%E9%9D%A2%E8%AF%95%E9%A2%98/TypeScript%20%E9%9D%A2%E8%AF%95%E4%B8%93%E9%A2%98.html","title":"TypeScript 面试专题","lang":"zh-CN","frontmatter":{"date":"2022-08-28T00:00:00.000Z","category":["面试题","前端","TypeScript"],"description":"interface 与 type 异同点 这可能是最经典的一道 TS 面试题了，因此这里我们放在第一个知识点来讲解。 及格线 不论如何，以下这些概念是你需要基本了解的，否则很容易被怀疑是否真的深入使用过 TypeScript 。\\r在对象扩展情况下，interface 使用 extends 关键字，而 type 使用交叉类型（&）。; \\r同名的 inte...","head":[["meta",{"property":"og:url","content":"https://yihuiBlog.top/TypeScript/%E9%9D%A2%E8%AF%95%E9%A2%98/TypeScript%20%E9%9D%A2%E8%AF%95%E4%B8%93%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"Yihui's Blog"}],["meta",{"property":"og:title","content":"TypeScript 面试专题"}],["meta",{"property":"og:description","content":"interface 与 type 异同点 这可能是最经典的一道 TS 面试题了，因此这里我们放在第一个知识点来讲解。 及格线 不论如何，以下这些概念是你需要基本了解的，否则很容易被怀疑是否真的深入使用过 TypeScript 。\\r在对象扩展情况下，interface 使用 extends 关键字，而 type 使用交叉类型（&）。; \\r同名的 inte..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-11-25T08:26:33.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-08-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-25T08:26:33.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"interface 与 type 异同点","slug":"interface-与-type-异同点","link":"#interface-与-type-异同点","children":[{"level":3,"title":"及格线","slug":"及格线","link":"#及格线","children":[]},{"level":3,"title":"优秀回答","slug":"优秀回答","link":"#优秀回答","children":[]}]},{"level":2,"title":"类型兼容性比较","slug":"类型兼容性比较","link":"#类型兼容性比较","children":[{"level":3,"title":"及格线","slug":"及格线-1","link":"#及格线-1","children":[]},{"level":3,"title":"优秀回答","slug":"优秀回答-1","link":"#优秀回答-1","children":[]}]},{"level":2,"title":"any、unknown 与 never","slug":"any、unknown-与-never","link":"#any、unknown-与-never","children":[{"level":3,"title":"及格线","slug":"及格线-2","link":"#及格线-2","children":[]},{"level":3,"title":"优秀回答","slug":"优秀回答-2","link":"#优秀回答-2","children":[]}]},{"level":2,"title":"工具类型实现","slug":"工具类型实现","link":"#工具类型实现","children":[{"level":3,"title":"及格线","slug":"及格线-3","link":"#及格线-3","children":[]},{"level":3,"title":"优秀回答","slug":"优秀回答-3","link":"#优秀回答-3","children":[]}]},{"level":2,"title":"场景题题问：","slug":"场景题题问","link":"#场景题题问","children":[{"level":3,"title":"Typescript 的数据类型有哪些？","slug":"typescript-的数据类型有哪些","link":"#typescript-的数据类型有哪些","children":[]},{"level":3,"title":"TypeScript 中函数的理解？与 JavaScript 函数的区别？","slug":"typescript-中函数的理解-与-javascript-函数的区别","link":"#typescript-中函数的理解-与-javascript-函数的区别","children":[]},{"level":3,"title":"对 TypeScript 中泛型的理解？应用场景？","slug":"对-typescript-中泛型的理解-应用场景","link":"#对-typescript-中泛型的理解-应用场景","children":[]},{"level":3,"title":"对 TypeScript 中高级类型的理解？有哪些？","slug":"对-typescript-中高级类型的理解-有哪些","link":"#对-typescript-中高级类型的理解-有哪些","children":[]},{"level":3,"title":"有哪些？","slug":"有哪些","link":"#有哪些","children":[]},{"level":3,"title":"对 TypeScript 装饰器@的理解？应用场景？","slug":"对-typescript-装饰器-的理解-应用场景","link":"#对-typescript-装饰器-的理解-应用场景","children":[]},{"level":3,"title":"对 TypeScript 中命名空间与模块的理解？区别？","slug":"对-typescript-中命名空间与模块的理解-区别","link":"#对-typescript-中命名空间与模块的理解-区别","children":[]},{"level":3,"title":"说说如何在 React 项目中应用 TypeScript？","slug":"说说如何在-react-项目中应用-typescript","link":"#说说如何在-react-项目中应用-typescript","children":[]},{"level":3,"title":"说说如何在Vue2项目中应用TypeScript？","slug":"说说如何在vue2项目中应用typescript","link":"#说说如何在vue2项目中应用typescript","children":[]}]},{"level":2,"title":"1. 为什么推荐使用TypeScript？","slug":"_1-为什么推荐使用typescript","link":"#_1-为什么推荐使用typescript","children":[]},{"level":2,"title":"2. 说说TypeScript中命名空间与模块的理解和区别","slug":"_2-说说typescript中命名空间与模块的理解和区别","link":"#_2-说说typescript中命名空间与模块的理解和区别","children":[]},{"level":2,"title":"3. TypeScript支持的访问修饰符有哪些？","slug":"_3-typescript支持的访问修饰符有哪些","link":"#_3-typescript支持的访问修饰符有哪些","children":[]},{"level":2,"title":"4. TypeScript中有哪些声明变量的方式？","slug":"_4-typescript中有哪些声明变量的方式","link":"#_4-typescript中有哪些声明变量的方式","children":[]},{"level":2,"title":"5. TypeScript和JavaScript的区别是什么？","slug":"_5-typescript和javascript的区别是什么","link":"#_5-typescript和javascript的区别是什么","children":[]},{"level":2,"title":"6. TypeScript中的Declare关键字有什么作用？","slug":"_6-typescript中的declare关键字有什么作用","link":"#_6-typescript中的declare关键字有什么作用","children":[]},{"level":2,"title":"7. 解释一下TypeScript中的枚举","slug":"_7-解释一下typescript中的枚举","link":"#_7-解释一下typescript中的枚举","children":[]},{"level":2,"title":"8. TypeScript中什么是装饰器？","slug":"_8-typescript中什么是装饰器","link":"#_8-typescript中什么是装饰器","children":[]},{"level":2,"title":"9. TypeScript中的模块是什么？","slug":"_9-typescript中的模块是什么","link":"#_9-typescript中的模块是什么","children":[]},{"level":2,"title":"10. TypeScript的内置数据类型有哪些？","slug":"_10-typescript的内置数据类型有哪些","link":"#_10-typescript的内置数据类型有哪些","children":[]},{"level":2,"title":"11. TypeScript的主要特点是什么？","slug":"_11-typescript的主要特点是什么","link":"#_11-typescript的主要特点是什么","children":[]},{"level":2,"title":"12. TypeScript中never和void的区别？","slug":"_12-typescript中never和void的区别","link":"#_12-typescript中never和void的区别","children":[]},{"level":2,"title":"13. TypeScript中的类型断言是什么？","slug":"_13-typescript中的类型断言是什么","link":"#_13-typescript中的类型断言是什么","children":[]},{"level":2,"title":"14. TS中any和unknown有什么区别？","slug":"_14-ts中any和unknown有什么区别","link":"#_14-ts中any和unknown有什么区别","children":[]},{"level":2,"title":"15. 使用TS实现一个判断传入参数是否是数组类型的方法？","slug":"_15-使用ts实现一个判断传入参数是否是数组类型的方法","link":"#_15-使用ts实现一个判断传入参数是否是数组类型的方法","children":[]},{"level":2,"title":"16. tsconfig.json有什么作用？","slug":"_16-tsconfig-json有什么作用","link":"#_16-tsconfig-json有什么作用","children":[]},{"level":2,"title":"17. TypeScript中什么是类类型接口？","slug":"_17-typescript中什么是类类型接口","link":"#_17-typescript中什么是类类型接口","children":[]},{"level":2,"title":"18. TS中什么是方法重载？","slug":"_18-ts中什么是方法重载","link":"#_18-ts中什么是方法重载","children":[]},{"level":2,"title":"19. TS中的类是什么，如何定义？","slug":"_19-ts中的类是什么-如何定义","link":"#_19-ts中的类是什么-如何定义","children":[]},{"level":2,"title":"20. 如何在TS中实现继承？","slug":"_20-如何在ts中实现继承","link":"#_20-如何在ts中实现继承","children":[]},{"level":2,"title":"21. TS中的泛型是什么？","slug":"_21-ts中的泛型是什么","link":"#_21-ts中的泛型是什么","children":[]},{"level":2,"title":"22. 说说TS中的类及其特性","slug":"_22-说说ts中的类及其特性","link":"#_22-说说ts中的类及其特性","children":[]},{"level":2,"title":"23. 解释如何使用TypeScript mixin","slug":"_23-解释如何使用typescript-mixin","link":"#_23-解释如何使用typescript-mixin","children":[]},{"level":2,"title":"24. 什么是TypeScript映射文件？","slug":"_24-什么是typescript映射文件","link":"#_24-什么是typescript映射文件","children":[]},{"level":2,"title":"25. TS中的类型有哪些？","slug":"_25-ts中的类型有哪些","link":"#_25-ts中的类型有哪些","children":[]},{"level":2,"title":"26. TS中的interface和type有什么区别？","slug":"_26-ts中的interface和type有什么区别","link":"#_26-ts中的interface和type有什么区别","children":[]},{"level":2,"title":"27. TS中的getter/setter是什么？你如何使用它们？","slug":"_27-ts中的getter-setter是什么-你如何使用它们","link":"#_27-ts中的getter-setter是什么-你如何使用它们","children":[]},{"level":2,"title":"28. 如何检查TS中的null和undefiend？","slug":"_28-如何检查ts中的null和undefiend","link":"#_28-如何检查ts中的null和undefiend","children":[]},{"level":2,"title":"29. TypeScript中const和readonly的区别是什么？","slug":"_29-typescript中const和readonly的区别是什么","link":"#_29-typescript中const和readonly的区别是什么","children":[]},{"level":2,"title":"30. Omit 类型有什么作用","slug":"_30-omit-类型有什么作用","link":"#_30-omit-类型有什么作用","children":[]}],"git":{"createdTime":1669364793000,"updatedTime":1669364793000,"contributors":[{"name":"MoMeak9","email":"1308994506@qq.com","commits":1}]},"readingTime":{"minutes":32.06,"words":9619},"copyright":"著作权归YihuiBlog所有\\n基于CC-BY 4.0协议\\n原文链接：https://yihuiblog.top/TypeScript/%E9%9D%A2%E8%AF%95%E9%A2%98/TypeScript%20%E9%9D%A2%E8%AF%95%E4%B8%93%E9%A2%98.html","filePathRelative":"TypeScript/面试题/TypeScript 面试专题.md","localizedDate":"2022年8月28日"}`);export{e as data};
