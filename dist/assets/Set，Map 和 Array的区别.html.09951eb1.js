import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as r,e as d}from"./app.d7b34baa.js";const h={},t=d('<h1 id="set-map-和-array的区别" tabindex="-1"><a class="header-anchor" href="#set-map-和-array的区别" aria-hidden="true">#</a> Set，Map 和 Array的区别</h1><h2 id="set-集合" tabindex="-1"><a class="header-anchor" href="#set-集合" aria-hidden="true">#</a> Set 集合</h2><p>todo</p><h2 id="map-字典" tabindex="-1"><a class="header-anchor" href="#map-字典" aria-hidden="true">#</a> Map 字典</h2><blockquote><p><code>Map</code> 对象保存键值对，并且能够记住键的原始插入顺序。任何值（对象或者原始值）都可以作为一个键或一个值。</p></blockquote><h3 id="特征" tabindex="-1"><a class="header-anchor" href="#特征" aria-hidden="true">#</a> 特征</h3><ul><li><p><code>Map</code> 对象这种数据结构和和对象类型，都已键值对的形式存储数据，即 <code>key-vlue</code> 形式。</p></li><li><p><code>Map</code> 对象存储的数据是有序的，而我们平常使用的对象是无序的，所以通常当我们需要使用对象形式（键值对）存储数据且需要有序时，采用 <code>Map</code> 对象进行存储。</p></li><li><p><code>Map</code> 对象的键值可以是任意类型，我们平时使用的对象只能使用字符串作为键。</p></li></ul><h3 id="weakmap" tabindex="-1"><a class="header-anchor" href="#weakmap" aria-hidden="true">#</a> WeakMap</h3><h2 id="array" tabindex="-1"><a class="header-anchor" href="#array" aria-hidden="true">#</a> Array</h2><h2 id="运行和使用比较" tabindex="-1"><a class="header-anchor" href="#运行和使用比较" aria-hidden="true">#</a> 运行和使用比较</h2>',10),c=[t];function i(o,n){return e(),r("div",null,c)}const l=a(h,[["render",i],["__file","Set，Map 和 Array的区别.html.vue"]]);export{l as default};
