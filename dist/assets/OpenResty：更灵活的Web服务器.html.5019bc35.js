import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c as a,e as t}from"./app.d7b34baa.js";const p={},s=t('<h1 id="openresty-更灵活的web服务器" tabindex="-1"><a class="header-anchor" href="#openresty-更灵活的web服务器" aria-hidden="true">#</a> OpenResty：更灵活的Web服务器</h1><p>Nginx 的服务管理思路延续了当时的流行做法，使用磁盘上的静态配置文件，所以每次修改后必须重启才能生效。</p><p>这在业务频繁变动的时候是非常致命的（例如流行的微服务架构），特别是对于拥有成千上万台服务器的网站来说，仅仅增加或者删除一行配置就要分发、重启所有的机器，对运维是一个非常大的挑战，要耗费很多的时间和精力，成本很高，很不灵活，难以“随需应变”。</p><p>有没有这样的一个 Web 服务器，它有 Nginx 的优点却没有 Nginx 的缺点，既轻量级、高性能，又灵活、可动态配置呢？这就是 OpenResty，它是一个“更好更灵活的 Nginx”。</p><h2 id="openresty-是什么" tabindex="-1"><a class="header-anchor" href="#openresty-是什么" aria-hidden="true">#</a> OpenResty 是什么？</h2><p>OpenResty 诞生于 2009 年，到现在刚好满 10 周岁。它的创造者是当时就职于某宝的“神级”程序员章亦春，网名叫“agentzh”。</p><p>OpenResty 并不是一个全新的 Web 服务器，而是基于 Nginx，<strong>它利用了 Nginx 模块化、可扩展的特性，开发了一系列的增强模块，并把它们打包整合，形成了一个“一站式”的 Web 开发平台。</strong></p><p>虽然 OpenResty 的核心是 Nginx，但它又超越了 Nginx，关键就在于其中的 ngx_lua 模块，把小巧灵活的 Lua 语言嵌入了 Nginx，可以用脚本的方式操作 Nginx 内部的进程、多路复用、阶段式处理等各种构件。</p><h3 id="动态的-lua" tabindex="-1"><a class="header-anchor" href="#动态的-lua" aria-hidden="true">#</a> 动态的 Lua</h3><p>刚才说了，OpenResty 里的一个关键模块是 ngx_lua，它为 Nginx 引入了脚本语言 Lua。Lua 是一个比较“小众”的语言，虽然历史比较悠久，但名气却没有 PHP、Python、JavaScript 大，这主要与它的自身定位有关。</p><img src="https://mc-web-1259409954.cos.ap-guangzhou.myqcloud.com/MyImages/202205142057431.png" alt="img" style="zoom:25%;"><p>作为脚本语言，Lua 还有一个重要的“<strong>代码热加载</strong>”特性，不需要重启进程，就能够从磁盘、Redis 或者任何其他地方加载数据，随时替换内存里的代码片段。这就带来了“<strong>动态配置</strong>”，让 OpenResty 能够永不停机，在微秒、毫秒级别实现配置和业务逻辑的实时更新，比起 Nginx 秒级的重启是一个极大的进步。</p><h3 id="阶段式处理" tabindex="-1"><a class="header-anchor" href="#阶段式处理" aria-hidden="true">#</a> 阶段式处理</h3><p>和 Nginx 一样，OpenResty 也使用“流水线”来处理 HTTP 请求，底层的运行基础是 Nginx 的“阶段式处理”，但它又有自己的特色。</p><p>Nginx 的“流水线”是由一个个 C 模块组成的，只能在静态文件里配置，开发困难，配置麻烦（相对而言）。而 OpenResty 的“流水线”则是由一个个的 Lua 脚本组成的，不仅可以从磁盘上加载，也可以从 Redis、MySQL 里加载，而且编写、调试的过程非常方便快捷。</p><p>图列出了 OpenResty 的阶段，比起 Nginx，OpenResty 的阶段更注重对 HTTP 请求响应报文的加工和处理。</p><p><img src="https://mc-web-1259409954.cos.ap-guangzhou.myqcloud.com/MyImages/202205142101511.png" alt="img"></p><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2><p>Nginx 依赖于磁盘上的静态配置文件，修改后必须重启才能生效，缺乏灵活性；</p><p>OpenResty 基于 Nginx，打包了很多有用的模块和库，是一个高性能的 Web 开发平台；</p><p>OpenResty 的工作语言是 Lua，它小巧灵活，执行效率高，支持“代码热加载”；</p><p>OpenResty 的核心编程范式是“同步非阻塞”，使用协程，不需要异步回调函数；</p><p>OpenResty 也使用“阶段式处理”的工作模式，但因为在阶段里执行的都是 Lua 代码，所以非常灵活，配合 Redis 等外部数据库能够实现各种动态配置。</p>',23),i=[s];function r(o,h){return n(),a("div",null,i)}const d=e(p,[["render",r],["__file","OpenResty：更灵活的Web服务器.html.vue"]]);export{d as default};
