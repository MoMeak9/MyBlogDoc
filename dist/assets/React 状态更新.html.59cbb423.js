import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as d,c,e as o}from"./app.d7b34baa.js";const r={},a=o('<h2 id="react-状态更新" tabindex="-1"><a class="header-anchor" href="#react-状态更新" aria-hidden="true">#</a> React 状态更新</h2><h2 id="流程概览" tabindex="-1"><a class="header-anchor" href="#流程概览" aria-hidden="true">#</a> 流程概览</h2><h2 id="类比分支管理的心智模型" tabindex="-1"><a class="header-anchor" href="#类比分支管理的心智模型" aria-hidden="true">#</a> 类比分支管理的心智模型</h2><p>在<code>React</code>中，通过<code>ReactDOM.createBlockingRoot</code>和<code>ReactDOM.createRoot</code>创建的应用会采用<code>并发</code>的方式<code>更新状态</code>。</p><p><code>高优更新</code>（红色节点）中断正在进行中的<code>低优更新</code>（蓝色节点），先完成<code>render - commit流程</code>。</p><p>待<code>高优更新</code>完成后，<code>低优更新</code>基于<code>高优更新</code>的结果<code>重新更新</code>。</p><h2 id="update-对象" tabindex="-1"><a class="header-anchor" href="#update-对象" aria-hidden="true">#</a> Update 对象</h2><h3 id="update与fiber的联系" tabindex="-1"><a class="header-anchor" href="#update与fiber的联系" aria-hidden="true">#</a> Update与Fiber的联系</h3><p><code>Fiber节点</code>组成<code>Fiber树</code>，页面中最多同时存在两棵<code>Fiber树</code>：</p><ul><li>代表当前页面状态的<code>current Fiber树</code></li><li>代表正在<code>render阶段</code>的<code>workInProgress Fiber树</code></li></ul><p>类似<code>Fiber节点</code>组成<code>Fiber树</code>，<code>Fiber节点</code>上的多个<code>Update</code>会组成链表并被包含在<code>fiber.updateQueue</code>中。</p><blockquote><p>什么情况下一个Fiber节点会存在多个Update？</p><p>方法内部多次调用this.setState</p></blockquote><p><code>Fiber节点</code>最多同时存在两个<code>updateQueue</code>：</p><ul><li><code>current fiber</code>保存的<code>updateQueue</code>即<code>current updateQueue</code></li><li><code>workInProgress fiber</code>保存的<code>updateQueue</code>即<code>workInProgress updateQueue</code></li></ul><p>在<code>commit阶段</code>完成页面渲染后，<code>workInProgress Fiber树</code>变为<code>current Fiber树</code>，<code>workInProgress Fiber树</code>内<code>Fiber节点</code>的<code>updateQueue</code>就变成<code>current updateQueue</code>。</p><h3 id="updatequeue" tabindex="-1"><a class="header-anchor" href="#updatequeue" aria-hidden="true">#</a> updateQueue</h3>',16),t=[a];function i(u,n){return d(),c("div",null,t)}const s=e(r,[["render",i],["__file","React 状态更新.html.vue"]]);export{s as default};
