import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,d as t,e,r as i}from"./app.d7b34baa.js";const l={},u=n("h1",{id:"astro-集成-vue-框架教程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#astro-集成-vue-框架教程","aria-hidden":"true"},"#"),s(" Astro 集成 Vue 框架教程")],-1),r=n("p",null,"Astro的集成能力支持我们使用Vue3编写的组件，并且支持SSR（server-side rendering）和CSH（client-side hydration）",-1),d=n("p",null,[n("strong",null,"Astro 集成简介：")],-1),k=n("strong",null,"Astro 集成",-1),v={href:"https://www.npmjs.com/search?q=keywords%3Aastro-component&ranking=popularity",target:"_blank",rel:"noopener noreferrer"},m=n("ul",null,[n("li",null,"解锁 React、Vue、Svelte、Solid 和其他流行的 UI 框架。"),n("li",null,"只需几行代码就能整合 Tailwind 和 Partytown 等工具。"),n("li",null,"为你的项目添加新功能，如自动生成网站地图。"),n("li",null,"编写自定义代码，与构建过程、开发服务器等挂钩。")],-1),g=n("p",null,[s("目前只默认支持官方 Astro 集成（发布在 npm 的 "),n("code",null,"@astrojs/"),s(" 范围包），以保护用户不被破坏。")],-1),b={href:"https://docs.astro.build/zh-cn/guides/integrations-guide/",target:"_blank",rel:"noopener noreferrer"},h=e(`<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>有两种方法可以将集成添加到项目中。让我们先介绍最方便的选项！</p><h3 id="astro-add-指令" tabindex="-1"><a class="header-anchor" href="#astro-add-指令" aria-hidden="true">#</a> <code>astro add</code> 指令</h3><p>Astro 包括一个用于添加第一方集成的 CLI 工具：<code>astro add</code>。该命令将：</p><ol><li>（可选）安装所有必要的依赖项和对等依赖项</li><li>（也是可选的）更新项目的 <code>astro.config.* </code>文件以应用此集成</li></ol><p>要安装 @astrojs/vue，请在项目目录运行以下命令并按照提示操作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Using NPM</span>
npx astro <span class="token function">add</span> vue
<span class="token comment"># Using Yarn</span>
<span class="token function">yarn</span> astro <span class="token function">add</span> vue
<span class="token comment"># Using PNPM</span>
<span class="token function">pnpm</span> astro <span class="token function">add</span> vue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="手动安装依赖" tabindex="-1"><a class="header-anchor" href="#手动安装依赖" aria-hidden="true">#</a> 手动安装依赖</h3><ol><li><p>安装<code>@astrojs/vue</code>集成</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @astrojs/vue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>大多数包管理器也会安装相关的对等依赖项。尽管如此，如果你在启动 Astro 时看到 “Cannot find package ‘vue’”（或类似的）警告，则你需要再次手动安装 Vue：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> vue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>修改<code>astro.config.*</code>以应用集成</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@astrojs/vue&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">integrations</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="开始使用" tabindex="-1"><a class="header-anchor" href="#开始使用" aria-hidden="true">#</a> 开始使用</h2>`,10),f={href:"https://docs.astro.build/zh-cn/core-concepts/framework-components/#using-framework-components",target:"_blank",rel:"noopener noreferrer"},y=e(`<p>在 Astro 页面、布局和组件中就像 Astro 组件一样使用你的 JavaScript 框架组件。所有组件都可放在 <code>/src/components</code> 目录中，或者你也可以放在任何你喜欢的地方。</p><p>要使用框架组件，你需要在 Astro 组件脚本中使用相对路径导入它们。然后在其他组件、HTML 元素和类 JSX 表达式中使用它们。</p><p>比如在Layout组件中嵌套</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>// packages\\app\\src\\layouts\\Layout.astro
---
import Navbar from &#39;./components/Navbar.vue&#39;;

export interface Props {
    title: string;
}

const { title } = Astro.props;
---

<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image/svg+xml<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/favicon.svg<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>generator<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{Astro.generator}</span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>{title}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Navbar</span> <span class="token attr-name"><span class="token namespace">client:</span>load</span> <span class="token punctuation">/&gt;</span></span> // 这里！
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="激活组件" tabindex="-1"><a class="header-anchor" href="#激活组件" aria-hidden="true">#</a> 激活组件</h3><p>框架组件可以使用 <code>client:*</code> 指令实现激活。它是个用来定义你的组件应该如何被<strong>渲染</strong>和激活的属性。</p>`,6),_={href:"https://docs.astro.build/zh-cn/reference/directives-reference/#%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8C%87%E4%BB%A4",target:"_blank",rel:"noopener noreferrer"},w=e(`<p>大多数指令会在构建时在服务器上渲染组件。组件 JS 将根据特定的指令被分发到客户端。当组件的 JS 导入完成后，组件将进行激活。</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>---
// 示例：浏览器中的激活框架组件。
import InteractiveButton from &#39;../components/InteractiveButton.jsx&#39;;
import InteractiveCounter from &#39;../components/InteractiveCounter.jsx&#39;;
---
<span class="token comment">&lt;!-- 该组件 JS 将在页面加载开始时导入 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InteractiveButton</span> <span class="token attr-name"><span class="token namespace">client:</span>load</span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">&lt;!-- 该组件 JS 将不会分发给客户端直到用户向下滚动，该组件在页面上是可见的 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InteractiveCounter</span> <span class="token attr-name"><span class="token namespace">client:</span>visible</span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>可用激活指令</strong></p><p>几个适用于 UI 框架组件的激活指令：<code>client:load</code>、<code>client:idle</code>、<code>client:visible</code>、<code>client:media={QUERY}</code> 和 <code>client:only={FRAMEWORK}</code>。</p><blockquote><p>这即使是在SSR模式下也是必要的</p></blockquote><h3 id="关于typescript" tabindex="-1"><a class="header-anchor" href="#关于typescript" aria-hidden="true">#</a> 关于Typescript</h3><p>Astro 内置了对 TypeScript的支持。你可以在 Astro 项目中导入 <code>.ts</code> 和 <code>.tsx</code> 文件，甚至可以直接在 Astro 组件中编写 TypeScript 代码。同样的，这对框架组件同样适用，比如Vue中：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// your code</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接就可以开始使用TS啦~</p><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2>`,10),x=n("code",null,"@vitejs/plugin-vue",-1),j=n("code",null,"@vitejs/plugin-vue",-1),q={href:"https://www.npmjs.com/package/@vitejs/plugin-vue",target:"_blank",rel:"noopener noreferrer"},A=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@astrojs/vue&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">integrations</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">compilerOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// treat any tag that starts with ion- as custom elements</span>
        <span class="token function-variable function">isCustomElement</span><span class="token operator">:</span> <span class="token parameter">tag</span> <span class="token operator">=&gt;</span> tag<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;ion-&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="应用入口-appentrypoint" tabindex="-1"><a class="header-anchor" href="#应用入口-appentrypoint" aria-hidden="true">#</a> 应用入口 appEntrypoint</h2><p>我们可以扩展 Vue 应用程序实例，将 appEntrypoint 选项设置为相对于根目录的导入说明符（例如，appEntrypoint：“/src/pages/_app”）。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;astro/config&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@astrojs/vue&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">integrations</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">appEntrypoint</span><span class="token operator">:</span> <span class="token string">&#39;/src/pages/_app&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该文件的默认导出应该是一个在渲染之前接受 Vue App 实例的函数，允许使用自定义 Vue 插件、<code>app.use</code> 和其他针对高级用例的自定义。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> App <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> i18nPlugin <span class="token keyword">from</span> <span class="token string">&#39;my-vue-i18n-plugin&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>app<span class="token operator">:</span> App<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>i18nPlugin<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开启-jsx" tabindex="-1"><a class="header-anchor" href="#开启-jsx" aria-hidden="true">#</a> 开启 jsx</h2><p>设置 Vue JSX 为 true</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;astro/config&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@astrojs/vue&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">integrations</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">jsx</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),S=n("code",null,"@vitejs/plugin-vue-jsx",-1),E={href:"https://www.npmjs.com/package/@vitejs/plugin-vue-jsx",target:"_blank",rel:"noopener noreferrer"},V=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;astro/config&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@astrojs/vue&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">integrations</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">jsx</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// treat any tag that starts with ion- as custom elements</span>
        <span class="token function-variable function">isCustomElement</span><span class="token operator">:</span> <span class="token parameter">tag</span> <span class="token operator">=&gt;</span> tag<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;ion-&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function C(I,B){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,r,n("blockquote",null,[d,n("p",null,[s("使用 "),k,s("只需几行代码就能为你的项目添加新的功能和行为。你可以自己编写一个自定义的集成，或者从 "),n("a",v,[s("npm"),t(a)]),s(" 获取流行集成。")]),m,g,n("p",null,[n("a",b,[s("使用集成 🚀 Astro 文档"),t(a)])])]),h,n("p",null,[s("Astro 使用的是 jsx like的语法，所以如果你是React选手可能会比较熟悉，我这边演示一下Vue使用方法，详细内容可见"),n("a",f,[s("框架组件 🚀 Astro 文档"),t(a)])]),y,n("p",null,[n("a",_,[s("客户端指令"),t(a)]),s("描述了你的组件是否应该在构建时被渲染，以及你的组件的 JavaScript 何时应该被浏览器加载.")]),w,n("p",null,[s("此集成由 "),x,s(" 提供支持。如果要自定义 Vue 编译器，可以为集成提供选项。更多详细信息，请参阅"),j,s(" 文档 "),n("a",q,[s("@vitejs/plugin-vue - npm"),t(a)]),s("。")]),A,n("p",null,[s("此时需要自定义 Vue JSX 编译器的话，请传递Options对象而不是布尔值。有关详细信息，请参阅"),S,s(),n("a",E,[s("@vitejs/plugin-vue-jsx - npm"),t(a)]),s("文档。")]),V])}const T=p(l,[["render",C],["__file","Vue集成.html.vue"]]);export{T as default};
