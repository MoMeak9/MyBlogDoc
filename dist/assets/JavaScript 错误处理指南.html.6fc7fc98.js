const e=JSON.parse(`{"key":"v-170fe196","path":"/JavaScript/JavaScript%20%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E6%8C%87%E5%8D%97.html","title":"JavaScript 错误处理指南","lang":"zh-CN","frontmatter":{"date":"2022-04-01T00:00:00.000Z","category":["前端","JavaScript"],"description":"什么是编程中的错误 我们的开发过程中并不总是一帆风顺。特别是在某些情况下，我们可能希望停止程序或在发生不良情况时通知用户。 例如：\\r程序试图打开一个不存在的文件、; \\r网络连接断开; \\r用户输入了无效字符; 在类似这些情况下，我们可以自己写个自定义的错误来管理，或者直接让引擎为我们去定义这些错误。有了错误定义后，我们可以用消息通知用户，或者停止执行程序...","head":[["meta",{"property":"og:url","content":"https://yihuiBlog.top/JavaScript/JavaScript%20%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E6%8C%87%E5%8D%97.html"}],["meta",{"property":"og:site_name","content":"Yihui's Blog"}],["meta",{"property":"og:title","content":"JavaScript 错误处理指南"}],["meta",{"property":"og:description","content":"什么是编程中的错误 我们的开发过程中并不总是一帆风顺。特别是在某些情况下，我们可能希望停止程序或在发生不良情况时通知用户。 例如：\\r程序试图打开一个不存在的文件、; \\r网络连接断开; \\r用户输入了无效字符; 在类似这些情况下，我们可以自己写个自定义的错误来管理，或者直接让引擎为我们去定义这些错误。有了错误定义后，我们可以用消息通知用户，或者停止执行程序..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-11-25T07:13:50.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-04-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-25T07:13:50.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"什么是编程中的错误","slug":"什么是编程中的错误","link":"#什么是编程中的错误","children":[]},{"level":2,"title":"JavaScript 中的错误是什么","slug":"javascript-中的错误是什么","link":"#javascript-中的错误是什么","children":[]},{"level":2,"title":"JavaScript中的许多类型的错误","slug":"javascript中的许多类型的错误","link":"#javascript中的许多类型的错误","children":[]},{"level":2,"title":"什么是异常？","slug":"什么是异常","link":"#什么是异常","children":[]},{"level":2,"title":"当我们抛出异常时会发生什么？","slug":"当我们抛出异常时会发生什么","link":"#当我们抛出异常时会发生什么","children":[]},{"level":2,"title":"同步中的错误处理","slug":"同步中的错误处理","link":"#同步中的错误处理","children":[]},{"level":2,"title":"使用 generator 函数来处理错误","slug":"使用-generator-函数来处理错误","link":"#使用-generator-函数来处理错误","children":[]},{"level":2,"title":"异步中的错误处理","slug":"异步中的错误处理","link":"#异步中的错误处理","children":[]},{"level":2,"title":"onerror 怎么样","slug":"onerror-怎么样","link":"#onerror-怎么样","children":[]},{"level":2,"title":"使用 Promise 处理错误","slug":"使用-promise-处理错误","link":"#使用-promise-处理错误","children":[]},{"level":2,"title":"Promise, error, 和 throw","slug":"promise-error-和-throw","link":"#promise-error-和-throw","children":[]},{"level":2,"title":"使用 Promise 来处理定时器中的异常","slug":"使用-promise-来处理定时器中的异常","link":"#使用-promise-来处理定时器中的异常","children":[]},{"level":2,"title":"使用 Promise.all 来处理错误","slug":"使用-promise-all-来处理错误","link":"#使用-promise-all-来处理错误","children":[]},{"level":2,"title":"使用 Promise.any 来处理错误","slug":"使用-promise-any-来处理错误","link":"#使用-promise-any-来处理错误","children":[]},{"level":2,"title":"使用 Promise.race  来处理错误","slug":"使用-promise-race-来处理错误","link":"#使用-promise-race-来处理错误","children":[]},{"level":2,"title":"使用 Promise.allSettled  来处理错误","slug":"使用-promise-allsettled-来处理错误","link":"#使用-promise-allsettled-来处理错误","children":[]},{"level":2,"title":"使用 async/await  来处理错误","slug":"使用-async-await-来处理错误","link":"#使用-async-await-来处理错误","children":[]},{"level":2,"title":"使用 async generators  来处理错误","slug":"使用-async-generators-来处理错误","link":"#使用-async-generators-来处理错误","children":[]},{"level":2,"title":"Node 中的错误处理","slug":"node-中的错误处理","link":"#node-中的错误处理","children":[]},{"level":2,"title":"Node.js 中的异步错误处理：event emitters","slug":"node-js-中的异步错误处理-event-emitters","link":"#node-js-中的异步错误处理-event-emitters","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1669360430000,"updatedTime":1669360430000,"contributors":[{"name":"MoMeak9","email":"shi.yihui@iwhalecloud.com","commits":1}]},"readingTime":{"minutes":17.87,"words":5360},"copyright":"著作权归YihuiBlog所有\\n基于CC-BY 4.0协议\\n原文链接：https://yihuiblog.top/JavaScript/JavaScript%20%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E6%8C%87%E5%8D%97.html","filePathRelative":"JavaScript/JavaScript 错误处理指南.md","localizedDate":"2022年4月1日"}`);export{e as data};
