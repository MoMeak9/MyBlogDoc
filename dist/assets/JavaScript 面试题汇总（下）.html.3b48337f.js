const e=JSON.parse(`{"key":"v-232a3670","path":"/JavaScript/%E9%9D%A2%E8%AF%95%E9%A2%98/JavaScript%20%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB%EF%BC%88%E4%B8%8B%EF%BC%89.html","title":"JavaScript 面试题汇总（下）","lang":"zh-CN","frontmatter":{"date":"2022-07-01T00:00:00.000Z","category":["前端","JavaScript"],"description":"「2021」高频前端面试题汇总之JavaScript篇（下） (https://juejin.cn/post/6941194115392634888) 六、this/call/apply/bind 1. 对this对象的理解 :star::star: this 是执行上下文中的一个属性，它指向最后一次调用这个方法的对象。在实际开发中，this 的指向可...","head":[["meta",{"property":"og:url","content":"https://yihuiBlog.top/JavaScript/%E9%9D%A2%E8%AF%95%E9%A2%98/JavaScript%20%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB%EF%BC%88%E4%B8%8B%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"Yihui's Blog"}],["meta",{"property":"og:title","content":"JavaScript 面试题汇总（下）"}],["meta",{"property":"og:description","content":"「2021」高频前端面试题汇总之JavaScript篇（下） (https://juejin.cn/post/6941194115392634888) 六、this/call/apply/bind 1. 对this对象的理解 :star::star: this 是执行上下文中的一个属性，它指向最后一次调用这个方法的对象。在实际开发中，this 的指向可..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-11-25T08:26:33.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-07-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-25T08:26:33.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"六、this/call/apply/bind","slug":"六、this-call-apply-bind","link":"#六、this-call-apply-bind","children":[{"level":3,"title":"1. 对this对象的理解 ⭐⭐","slug":"_1-对this对象的理解","link":"#_1-对this对象的理解","children":[]},{"level":3,"title":"2. call() 和 apply() 的区别？ ⭐⭐","slug":"_2-call-和-apply-的区别","link":"#_2-call-和-apply-的区别","children":[]},{"level":3,"title":"3. 实现call、apply 及 bind 函数 ⭐⭐","slug":"_3-实现call、apply-及-bind-函数","link":"#_3-实现call、apply-及-bind-函数","children":[]}]},{"level":2,"title":"七、异步编程","slug":"七、异步编程","link":"#七、异步编程","children":[{"level":3,"title":"1. 异步编程的实现方式？ ⭐","slug":"_1-异步编程的实现方式","link":"#_1-异步编程的实现方式","children":[]},{"level":3,"title":"2. setTimeout、Promise、Async/Await 的区别 ⭐","slug":"_2-settimeout、promise、async-await-的区别","link":"#_2-settimeout、promise、async-await-的区别","children":[]},{"level":3,"title":"3. 对Promise的理解 ⭐⭐","slug":"_3-对promise的理解","link":"#_3-对promise的理解","children":[]},{"level":3,"title":"4. Promise的基本用法 ⭐⭐","slug":"_4-promise的基本用法","link":"#_4-promise的基本用法","children":[]},{"level":3,"title":"5. Promise解决了什么问题⭐","slug":"_5-promise解决了什么问题","link":"#_5-promise解决了什么问题","children":[]},{"level":3,"title":"6. Promise.all和Promise.race的区别的使用场景 ⭐","slug":"_6-promise-all和promise-race的区别的使用场景","link":"#_6-promise-all和promise-race的区别的使用场景","children":[]},{"level":3,"title":"7.  对async/await 的理解 ⭐⭐","slug":"_7-对async-await-的理解","link":"#_7-对async-await-的理解","children":[]},{"level":3,"title":"8. await 到底在等啥？⭐","slug":"_8-await-到底在等啥","link":"#_8-await-到底在等啥","children":[]},{"level":3,"title":"9.  async/await的优势 ⭐","slug":"_9-async-await的优势","link":"#_9-async-await的优势","children":[]},{"level":3,"title":"10. async/await对比Promise的优势 ⭐⭐","slug":"_10-async-await对比promise的优势","link":"#_10-async-await对比promise的优势","children":[]},{"level":3,"title":"11. async/await 如何捕获异常","slug":"_11-async-await-如何捕获异常","link":"#_11-async-await-如何捕获异常","children":[]},{"level":3,"title":"12. 并发与并行的区别？","slug":"_12-并发与并行的区别","link":"#_12-并发与并行的区别","children":[]},{"level":3,"title":"13. 什么是回调函数？回调函数有什么缺点？如何解决回调地狱问题？","slug":"_13-什么是回调函数-回调函数有什么缺点-如何解决回调地狱问题","link":"#_13-什么是回调函数-回调函数有什么缺点-如何解决回调地狱问题","children":[]},{"level":3,"title":"14. setTimeout、setInterval、requestAnimationFrame 各有什么特点？","slug":"_14-settimeout、setinterval、requestanimationframe-各有什么特点","link":"#_14-settimeout、setinterval、requestanimationframe-各有什么特点","children":[]}]},{"level":2,"title":"八、面向对象","slug":"八、面向对象","link":"#八、面向对象","children":[{"level":3,"title":"1. 对象创建的方式有哪些？⭐","slug":"_1-对象创建的方式有哪些","link":"#_1-对象创建的方式有哪些","children":[]},{"level":3,"title":"2. 对象继承的方式有哪些？⭐","slug":"_2-对象继承的方式有哪些","link":"#_2-对象继承的方式有哪些","children":[]}]},{"level":2,"title":"九、垃圾回收与内存泄漏","slug":"九、垃圾回收与内存泄漏","link":"#九、垃圾回收与内存泄漏","children":[{"level":3,"title":"1. 浏览器的垃圾回收机制 ⭐⭐","slug":"_1-浏览器的垃圾回收机制","link":"#_1-浏览器的垃圾回收机制","children":[]},{"level":3,"title":"2. 哪些情况会导致内存泄漏 ⭐","slug":"_2-哪些情况会导致内存泄漏","link":"#_2-哪些情况会导致内存泄漏","children":[]}]}],"git":{"createdTime":1669364793000,"updatedTime":1669364793000,"contributors":[{"name":"MoMeak9","email":"1308994506@qq.com","commits":1}]},"readingTime":{"minutes":37.29,"words":11187},"copyright":"著作权归YihuiBlog所有\\n基于CC-BY 4.0协议\\n原文链接：https://yihuiblog.top/JavaScript/%E9%9D%A2%E8%AF%95%E9%A2%98/JavaScript%20%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB%EF%BC%88%E4%B8%8B%EF%BC%89.html","filePathRelative":"JavaScript/面试题/JavaScript 面试题汇总（下）.md","localizedDate":"2022年7月1日"}`);export{e as data};
